.TH "C:/Users/Benjaminp/Documents/pcc/current/EL 450/PatienceInc/firmware/src/shared.c" 3 "Sat Feb 28 2015" "Sr. Design 2015" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/Users/Benjaminp/Documents/pcc/current/EL 450/PatienceInc/firmware/src/shared.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <shared\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBadc_setup\fP ()"
.br
.ti -1c
.RI "unsigned \fBadc_update\fP (unsigned char chA)"
.br
.ti -1c
.RI "unsigned \fBadc_update2\fP (unsigned char chA, unsigned char chB)"
.br
.RI "\fIUpdates two ADC channels to the buffers\&. \fP"
.ti -1c
.RI "void \fBadc_updateAll\fP ()"
.br
.RI "\fIUpdate all the ADC buffers that are activated in \fC\fBadc_setup()\fP\fP\&. \fP"
.ti -1c
.RI "void \fBpwm_setup\fP ()"
.br
.RI "\fISetup TMR2 for use by all the CCP modules\&. \fP"
.ti -1c
.RI "unsigned \fBpwm_set\fP (unsigned char channel, unsigned char duty)"
.br
.RI "\fISets a specific pwm channel to a certain duty cycle in %\&. \fP"
.ti -1c
.RI "void \fBi2c_setup\fP ()"
.br
.RI "\fISets up the i2c1 module\&. \fP"
.ti -1c
.RI "unsigned \fBi2c_tx\fP (\fBi2cPacket\fP packet)"
.br
.RI "\fITakes a packet and transmits it according to its contents\&. Returns true if successful\&. \fP"
.ti -1c
.RI "unsigned char * \fBi2c_rx\fP (unsigned char device, unsigned char addr, unsigned char qty)"
.br
.RI "\fIGets Data from a slave at a specific address\&. Returns a char array pointer\&. \fP"
.in -1c
.SH "Function Documentation"
.PP 
.SS "void adc_setup (void)"

.SS "unsigned adc_update (unsigned char chA)"

.SS "unsigned adc_update2 (unsigned char chA, unsigned char chB)"

.PP
Updates two ADC channels to the buffers\&. Inputs: two unsigned chars, \fCchA\fP and \fCchB\fP, specify which ADC channel to update\&.
.PP
Outputs: A single bit specifying success\&. (1=success) 
.SS "void adc_updateAll ()"

.PP
Update all the ADC buffers that are activated in \fC\fBadc_setup()\fP\fP\&. 
.SS "unsigned char* i2c_rx (unsigned char device, unsigned char addr, unsigned char qty)"

.PP
Gets Data from a slave at a specific address\&. Returns a char array pointer\&. Inputs: \fCdevice\fP: The 7-bit address of the device\&. \fCaddr\fP: the 8-bit address in i2cRx: recieves \fCqty\fP bytes from the slave at \fCaddr\fP\&. Returns an array \fCqty\fP long\&. 
.SS "void i2c_setup (void)"

.PP
Sets up the i2c1 module\&. 
.SS "unsigned i2c_tx (\fBi2cPacket\fP packet)"

.PP
Takes a packet and transmits it according to its contents\&. Returns true if successful\&. Inputs: a i2c transmission packet (consists of address and array of data)
.PP
Outputs: a single bit specifying failure or success
.PP
Description: This function takes the packet and transmits the \fCpacket\&.addr\fP byte first\&. It then transmits \fCpacket\&.dataLength\fP bytes from the \fCpacket\&.data\fP array\&. If at any time a byte is not acknowleged, the function will return 0 (false)\&. 
.SS "unsigned pwm_set (unsigned char channel, unsigned char duty)"

.PP
Sets a specific pwm channel to a certain duty cycle in %\&. Inputs: Channel - which PWM channel to use, duty - the duty cycle in percent\&.
.PP
Outputs: A single bit specifying whether or not the command succeded (1 = success) 
.SS "void pwm_setup (void)"

.PP
Setup TMR2 for use by all the CCP modules\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for Sr\&. Design 2015 from the source code\&.
